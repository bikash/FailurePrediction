library(plyr)
library(depmixS4)
library(TTR) # For downloading SP500 index
library(ggplot2)
library(reshape2)
library(xts)
##Plot number of observation Error Vs time
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$day <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "day")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(day),getcount)
## Data from haisen 26
Data2 = read.table("file/error_26.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data2$day <- cut(as.POSIXlt( Data2$date,  origin="1970-01-01" ), breaks = "day")
ts2 <- ddply(Data2, .(day),getcount)
## Data from haisen 27
Data3 = read.table("file/error_27.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data3$day <- cut(as.POSIXlt( Data3$date,  origin="1970-01-01" ), breaks = "day")
ts3 <- ddply(Data3, .(day),getcount)
## Data from haisen 28
Data4 = read.table("file/error_28.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data4$day <- cut(as.POSIXlt( Data4$date,  origin="1970-01-01" ), breaks = "day")
ts4 <- ddply(Data4, .(day),getcount)
## Data from haisen 29
Data5 = read.table("file/error_29.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data5$day <- cut(as.POSIXlt( Data5$date,  origin="1970-01-01" ), breaks = "day")
ts5 <- ddply(Data5, .(day),getcount)
## d data from haisen22
Data6 = read.table("file/error_22.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data6$day <- cut(as.POSIXlt( Data6$date,  origin="1970-01-01" ), breaks = "day")
ts6 <- ddply(Data6, .(day),getcount)
## d data from haisen20
Data7 = read.table("file/error_20.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data7$day <- cut(as.POSIXlt( Data7$date,  origin="1970-01-01" ), breaks = "day")
ts7 <- ddply(Data7, .(day),getcount)
## plot error observation along with failure ***********************
## Merge all data
date = unlist(list(ts1$day,ts6$day, ts7$day))
error = unlist(list(ts1$count, ts6$count, ts7$count))
data <- data.frame(date,error)
## Summing or grouping data of similar date
data$error = strtoi(data$error)
data = aggregate(error ~ date, data = data, sum)
obs=c(0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0) ## failure state
x = data$date
y = data$error
## Plot graph for Error vs time
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
lines( x,obs, col="red" )
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=c(1,0), pch=c(0,18))
dev.off()
## Calculate failure points
data$error = strtoi(data$error)
data = aggregate(error ~ date, data = data, sum)
obs=c(0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0) ## failure state
x = data$date
y = data$error
## Plot graph for Error vs time
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
lines( x,obs, col="white" )
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=c(1,0), pch=c(0,18))
dev.off()
## Plot graph for Error vs time
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
lines( x,obs, col="white" )
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=1, lty=c(0,0), pch=c(0,18))
dev.off()
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
lines( x,obs, col="white" )
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=1, lty=c(0,0), pch=c(0,18),  bty='n')
dev.off()
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
lines( x,obs, col="white" )
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=1, lty=c(0,0), pch=c(18),  bty='n')
dev.off()
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=1, lty=c(0,0), pch=c(0,18))
dev.off()
obs=c(0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0) ## failure state
x = data$date
y = data$error
## Plot graph for Error vs time
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
lines( x,obs, col="white" )
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=c(1,0), pch=c(0,18))
dev.off()
error = unlist(list(ts1$count, ts6$count, ts7$count))
data <- data.frame(date,error)
## Summing or grouping data of similar date
data$error = strtoi(data$error)
data = aggregate(error ~ date, data = data, sum)
obs=c(0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0) ## failure state
x = data$date
y = data$error
## Plot graph for Error vs time
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=c(1,0), pch=c(0,18))
dev.off()
error = unlist(list(ts1$count, ts6$count, ts7$count))
data <- data.frame(date,error)
## Summing or grouping data of similar date
data$error = strtoi(data$error)
data = aggregate(error ~ date, data = data, sum)
obs=c(0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0) ## failure state
x = data$date
y = data$error
## Plot graph for Error vs time
pdf("graph/error_obs.pdf",bg="white")
g_range <- range(0, y)
x_range <- range(0, x)
plot(NULL, ylim=g_range, xlim=x_range, xlab="Date", ylab="# of errors", xaxt="n")
lines(ts1$day, y, lwd=1, col="black")
for(i in 1:x_range[2]) {
if(obs[i] >0)
points(x[i], obs[i], pch = 18, col = "red", bg = "yellow",  cex = 1.2)
}
#points(x,obs, col = "red",pch = 18, bg = "grey")
a = as.POSIXct(x, origin="1970-01-01")
axis(side=1, at=x,   labels=format(a, '%Y-%m-%d'))
grid(14,15,lty=2)
legend ("topleft", legend =c("Number of Errors", "Failure"),
cex=0.8, col =c("black","red"),lwd=c(1,0), pch=c(0,18))
dev.off()
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$day <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "day")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(day),getcount)
ts1
##Plot number of observation Error Vs time
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$day <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "day")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(day),getcount)
## Data from haisen 26
Data2 = read.table("file/error_26.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data2$day <- cut(as.POSIXlt( Data2$date,  origin="1970-01-01" ), breaks = "day")
ts2 <- ddply(Data2, .(day),getcount)
## Data from haisen 27
Data3 = read.table("file/error_27.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data3$day <- cut(as.POSIXlt( Data3$date,  origin="1970-01-01" ), breaks = "day")
ts3 <- ddply(Data3, .(day),getcount)
## Data from haisen 28
Data4 = read.table("file/error_28.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data4$day <- cut(as.POSIXlt( Data4$date,  origin="1970-01-01" ), breaks = "day")
ts4 <- ddply(Data4, .(day),getcount)
## Data from haisen 29
Data5 = read.table("file/error_29.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data5$day <- cut(as.POSIXlt( Data5$date,  origin="1970-01-01" ), breaks = "day")
ts5 <- ddply(Data5, .(day),getcount)
## d data from haisen22
Data6 = read.table("file/error_22.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data6$day <- cut(as.POSIXlt( Data6$date,  origin="1970-01-01" ), breaks = "day")
ts6 <- ddply(Data6, .(day),getcount)
## d data from haisen20
Data7 = read.table("file/error_20.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data7$day <- cut(as.POSIXlt( Data7$date,  origin="1970-01-01" ), breaks = "day")
ts7 <- ddply(Data7, .(day),getcount)
ts6
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$day <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "day")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(day),getcount)
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$hour <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "hour")
getcount <- function(Df) { c(count = length(Df$ErrorType))  }
ts1 <- ddply(Data1, .(hour),getcount)
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$hour <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "hour")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
ts1 <- ddply(Data1, .(hour),getcount)
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$hour <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "hour")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(hour),getcount)
ts1
}
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$hour <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "hour")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(hour),getcount)
ts1
Data1
as.POSIXlt( Data1$date,  origin="1970-01-01" )
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
#Data1$hour <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "hour")
Data1$hour <- cut(Data1$date, breaks = "hour")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(hour),getcount)
ts1
ts1
ts1$date
ts1$hour
as.POSIXct(ts1$hour)
strptime(ts1$hour)
as.numeric(as.POSIXct(ts1$hour, origin="1970-01-01"))
ts1$hour
ts1$hour = as.numeric(as.POSIXct(ts1$hour, origin="1970-01-01"))
ts1
ts4hour
ts$hour
ts1$hour
for(i in 1:470)
{
if(ts$hour[i]!= k)
ts$obs[i]="0,0,0,0,0"
k= k+3600
}
k =  1415721600
for(i in 1:470)
{
if(ts1$hour[i]!= k)
ts1$obs[i]="0,0,0,0,0"
k= k+3600
}
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$hour <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "hour")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(hour),getcount)
ts1$hour = as.numeric(as.POSIXct(ts1$hour, origin="1970-01-01"))
ts1
ts1$hour[1]
ts1$hour[1]!=1415721600
ts1$hour[1]=1415721600
ts1$hour[1]==1415721600
ts1$hour[1]!=1415721600
ts1$hour[1]!=1415721960
ts1 <- ddply(Data1, .(hour),getcount)
ts1$hour = as.numeric(as.POSIXct(ts1$hour, origin="1970-01-01"))
k =  1415721600
for(i in 1:470)
{
if(ts1$hour[i]!= k){
ts$obs[i]="0,0,0,0,0"
ts$hour[i]=k
}
else
{
ts$obs[i]=ts1$obs[i]
ts$hour[i]=ts1$hour[i]
}
k= k+3600
}
ts1
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$day <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "day")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(day),getcount)
ts1
ts1 <- ddply(Data1, .(day),getcount)
#ts1$hour = as.numeric(as.POSIXct(ts1$hour, origin="1970-01-01"))
cat(ts1, sep = ';',  file = file.out1, fill = TRUE)
close(file.out)
file.out <- file('/file/out.txt', 'wt')
Data1 = read.table("file/error_25.txt",
sep=";",
col.names=c("date",  "status", "ErrorType", "Node"),
fill=FALSE,
strip.white=TRUE)
Data1$day <- cut(as.POSIXlt( Data1$date,  origin="1970-01-01" ), breaks = "day")
getcount <- function(Df) { c(count = as.numeric(length(Df$ErrorType)),
obs = paste(Df$ErrorType, collapse=","))
}
ts1 <- ddply(Data1, .(day),getcount)
#ts1$hour = as.numeric(as.POSIXct(ts1$hour, origin="1970-01-01"))
cat(ts1, sep = ';',  file = file.out, fill = TRUE)
close(file.out)
ts1
len = length(ts1$date)
len
len = length(ts1$hour)
len
ts1
len = length(ts1$day)
len
install.packages("mhsmm")
library("mhsmm")
J<-2
initial <- rep(1/J,J)
P <- matrix(c(.3,.5,.7,.5),nrow=J)
b <- list(mu=list(c(-3,0),c(1,2)),sigma=list(diag(2),matrix(c(4,2,2,3), ncol=2)))
model <- hmmspec(init=initial, trans=P, parms.emission=b,dens.emission=dmvnorm.hsmm)
model
J
initial
p
P
b
train <- simulate(model, nsim=300, seed=1234, rand.emis=rmvnorm.hsmm)plot(train,xlim=c(0,100))h1 = hmmfit(train,model,mstep=mstep.mvnorm)
train <- simulate(model, nsim=300, seed=1234, rand.emis=rmvnorm.hsmm)
plot(train,xlim=c(0,100))
h1 = hmmfit(train,model,mstep=mstep.mvnorm)
train
