rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Simulated, when failure was occured:\n")
j =1
failure = rep(c(0:10))
for(i in 1:nSim)
{
if(df$statev[i] == 0)  ## Healthy
rect(i,-1,i+1,0, col = "gray", border = NA)
else{
rect(i,-1,i+1,0, col = "black", border = NA)
failure[j]=i
j = j+1
}
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$viterbi[i] == "Failure")
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Simulated, when failure was occured:\n")
j =1
failure = rep(c(0:10))
for(i in 1:nSim)
{
if(df$statev[i] == 0)  ## Healthy
rect(i,-1,i+1,0, col = "gray", border = NA)
else{
rect(i,-1,i+1,0, col = "black", border = NA)
failure[j]=i
j = j+1
}
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$viterbi[i] == "Failure")
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
dev.off()
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Simulated, when failure was occured:\n")
j =1
failure = rep(c(0:10))
for(i in 1:nSim)
{
if(df$statev[i] == 0)  ## Healthy
rect(i,-1,i+1,0, col = "gray", border = NA)
else{
rect(i,-1,i+1,0, col = "black", border = NA)
failure[j]=i
j = j+1
}
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$viterbi[i] == "Failure")
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Simulated, when failure was occured:\n")
j =1
failure = rep(c(0:10))
for(i in 1:nSim)
{
if(df$statev[i] == 0)  ## Healthy
rect(i,-1,i+1,0, col = "gray", border = NA)
else{
rect(i,-1,i+1,0, col = "black", border = NA)
failure[j]=i
j = j+1
}
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$viterbi[i] == "Failure")
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$viterbi[i] == "Failure")
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
if(df$viterbi[1] == "Failure") cat "TT"
df$viterbi[1]
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
if(grepl(df$viterbi[1],"Failure")) cat "tt"
grepl(df$viterbi[1],"Failure")
grepl(df$viterbi[1],"Failure1")
grepl(df$viterbi[1],"Healthy")
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Simulated, when failure was occured:\n")
j =1
failure = rep(c(0:10))
for(i in 1:nSim)
{
if(df$statev[i] == 0)  ## Healthy
rect(i,-1,i+1,0, col = "gray", border = NA)
else{
rect(i,-1,i+1,0, col = "black", border = NA)
failure[j]=i
j = j+1
}
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
grepl(df$viterbi[1],"Failure1")
df$viterbi[i]
df$viterbi[1]
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
x <- seq_along(df$date)
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(grepl(df$viterbi[i],"Failure"))
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
pdf("graph/failurePredictionN.pdf",bg="white")
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "blue", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
df$statev
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "green", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-1,i+1,-0, col = "green", border = NA)
else
rect(i,-1,i+1,-0, col = "red", border = NA)
}
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "green", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
pdf("graph/failurePredictionN.pdf",bg="white")
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "green", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
df
head(df)
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "gray", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "gray", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "gray", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
pdf("graph/failurePredictionN.pdf",bg="white")
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "gray", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
readline("Simulated, when failure was occured:\n")
j =1
failure = rep(c(0:10))
for(i in 1:nSim)
{
if(df$statev[i] == 0)  ## Healthy
rect(i,-1,i+1,0, col = "gray", border = NA)
else{
rect(i,-1,i+1,0, col = "black", border = NA)
failure[j]=i
j = j+1
}
}
dev.off()
### model HMM
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "gray", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
## plot of graph
pdf("graph/failurePredictionN.pdf",bg="white")
readline("Plot simulated failure:\n")
y <- df$statev
y_range <- range(0, 40)
x_range <- range(0, 840)
nSim = length(df$state)
xlb = "Time (in hours)"
ylb = "# of error sequence"
plot(df$errseq, ylim=c(-1,7), xlim=x_range, xlab=xlb, ylab=ylb, xaxt="n" ,pch=3, bty="n")
#lines(x, df$seq, lwd=1, col="black")
axis(2,at=1:7)
readline("Prediction (viterbi):\n")
for(i in 1:nSim)
{
if(df$statev[i] == 0)
rect(i,-3,i+1,-2, col = "gray", border = NA)
else
rect(i,-3,i+1,-2, col = "red", border = NA)
}
dev.off()
nSim          = 2000
States        = c("Fair","Unfair")
Symbols       = 1:6 #c("1er","2er","3er","4er","5er","6er")
transProbs    = matrix(c(.99,.01,.02,.98), c(length(States),length(States)), byrow=TRUE)
emissionProbs = matrix(c(rep(1/6,6),c(rep(.1,5),.5)), c(length(States),length(Symbols)), byrow=TRUE)
hmm = initHMM(States, Symbols, transProbs=transProbs, emissionProbs=emissionProbs)
sim = simHMM(hmm,nSim)
vit = viterbi(hmm, sim$observation)
f   = forward(hmm, sim$observation)
b   = backward(hmm, sim$observation)
baumWelch(hmm,sim$observation)
